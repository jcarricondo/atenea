// PASOS A SEGUIR SI SE PERMITE LA HERENCIA DE REFERENCIAS "NIETO"

EN "js/basicos/mod_referencia_08032017_1050.js"

L103: 	
function addRowHeredada(tableId,id_referencia) {
	var error_ancestro = validarAncestro(id_referencia);
	var error_autoheredera = validarAutoHeredera(id_referencia);
	var error_heredera_repetida = validarHeredadasRepetida(id_referencia);
	// var error_herederas_anidadas = validarHerederasAnidadas(id_referencia);

	// Comprobamos que no se esta intentando añadir una referencia ancestro
	if(!error_ancestro) {
		// Comprobamos que no se está intentando heredar una referencia a si misma
		if(!error_autoheredera) {
			// Comprobamos que no se está intentando añadir una referencia repetida
			if (!error_heredera_repetida) {
				// Comprobamos que no se está intentando añadir una referencia heredada de otra heredada
				// if(!error_herederas_anidadas) {
					guardarInputsReferenciasHeredadasPrincipalesAlInsertar(id_ref);

					// Ahora calculamos las referencias heredadas de la nueva referencia
					var aux_rht = document.getElementsByName("REFS_HEREDADAS_TOTALES[]");
					var rht = new Array();
					for(j=0;j<aux_rht.length;j++) rht[j] = aux_rht.item(j).value;

					// Llamada asincrona para obtener el array de las referencias heredadas totales con la nueva referencia incluida
					var respuesta = (function () {
						var respuesta = null;
						$.ajax({
							dataType: "json",
							url: "../ajax/basicos/mod_referencia.php?comp=addReferenciasHeredadas",
							data: "id_ref=" + id_ref + "&rht=" + rht,
							type: "GET",
							async: false,
							success: function (data) {
								respuesta = data;
							}
						});
						return respuesta;
					})();

					eliminarNodosReferenciasHeredadasTotales();
					guardarInputsReferenciasHeredadasTotalesAlInsertar(respuesta);

					var table = document.getElementById(tableId);
					// Guardamos en una variable la cantidad de filas que tiene la tabla.
					// Esta variable también nos servirá para indicar que la fila se tiene
					// que insertar al final de la tabla.
					var pos = table.rows.length;
					var row = table.insertRow(pos);
					var fila = pos - 1;

					var cell_0 = row.insertCell(0);
					var cell_1 = row.insertCell(1);
					var cell_2 = row.insertCell(2);
					var cell_3 = row.insertCell(3);
					var cell_4 = row.insertCell(4);
					var cell_5 = row.insertCell(5);
					var cell_6 = row.insertCell(6);
					var cell_7 = row.insertCell(7);
					var cell_8 = row.insertCell(8);
					var cell_9 = row.insertCell(9);
					var cell_10 = row.insertCell(10);

					var piezas = new Array();
					var num_piezas = num_uds;

					cell_0.setAttribute("style", "text-align:center");
					cell_1.setAttribute("id", "enlaceComposites");
					cell_5.setAttribute("style", "text-align:center");
					cell_5.setAttribute("id", "celda_campo_piezas-" + fila);
					cell_6.setAttribute("style", "text-align:center");
					cell_7.setAttribute("style", "text-align:center");
					cell_8.setAttribute("style", "text-align:center");
					cell_9.setAttribute("style", "text-align:center");
					cell_10.setAttribute("style", "text-align:center");

					cell_0.innerHTML = id_ref;
					cell_1.innerHTML = ref;
					cell_2.innerHTML = prov;
					cell_3.innerHTML = ref_prov;
					cell_4.innerHTML = nom_pieza;
					cell_5.innerHTML = '<input type="text" id="piezas[]" name="piezas[]" class="CampoPiezasInput" value="' + num_piezas + '" onblur="javascript:validarHayCaracter(' + fila + ')"/>';
					cell_6.innerHTML = pack_precio.toFixed(2);
					cell_7.innerHTML = cant.toFixed(2);
					cell_8.innerHTML = precio_unidad.toFixed(2);
					cell_9.innerHTML = precio_referencia.toFixed(2);
					cell_10.innerHTML = '<input type="checkbox" name="chkbox" value"' + id_ref + '"/>';
				// }
				// else {
				//	 alert("ERROR: No se puede heredar una referencia que ha sido heredada a su vez por una de las referencias heredadas ")
				// }
			}
			else {
				alert("ERROR: Ya se ha añadido la referencia heredada a la tabla")
			}
		}
		else{
			alert("ERROR: No se puede autoheredar la misma referencia")
		}
	}
	else {
		alert("ERROR: No se puede insertar una referencia como heredera que es a la vez referencia antecesor de la referencia principal.");
	}


L393: 	/* function validarHerederasAnidadas(id_referencia){
			var todas_referencias_heredadas = document.getElementsByName("REFS_HEREDADAS_TOTALES[]");
			if(esHeredablePrincipal(id_referencia)) return false
			else {
				var encontrado = false;
				var i = 0;
				while (i < todas_referencias_heredadas.length && !encontrado) {
					id_ref_heredera = todas_referencias_heredadas[i].value;
					encontrado = id_referencia == id_ref_heredera;
					i++;
				}
				return encontrado;
			}
		} */


EN : "C:\xampp\htdocs\proyectos\git\atenea\ajax\basicos\mod_referencia.php"

L51:

case "addReferenciasHeredadas":
    $id_ref = $_GET["id_ref"];
    $aux_rht = $_GET["rht"];
    if(!empty($aux_rht)) $rht = explode(",",$aux_rht);

    if(!in_array($id_ref,$rht)){
		// Guardamos en el propio array de referencias herederas totales la referencia que se va a añadir
		$rht[] = $id_ref;

		// Obtenemos todas las referencias heredadas de la referencia añadida
		$res_heredadas_totales = $ref_heredada->dameTodasHeredadas($id_ref);
		if($res_heredadas_totales != NULL) {
			$res_heredadas_totales = array_column($res_heredadas_totales,'id_ref_heredada');
			$rht = array_merge($rht,$res_heredadas_totales);
		}

		$rht = array_unique($rht);
		sort($rht,SORT_NUMERIC);
	}

    $json = $rht;
    echo json_encode($json, JSON_FORCE_OBJECT);
break;
